!function(e){var t={};function n(r){if(t[r])return t[r].exports;var o=t[r]={i:r,l:!1,exports:{}};return e[r].call(o.exports,o,o.exports,n),o.l=!0,o.exports}n.m=e,n.c=t,n.d=function(e,t,r){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var o in e)n.d(r,o,function(t){return e[t]}.bind(null,o));return r},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=794)}({158:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.parseUrl=function(e,t){return(/^(?:([A-Za-z]+):)?(\/{0,3})([0-9.\-A-Za-z]+)(?::(\d+))?(?:\/([^?#]*))?(?:\?([^#]*))?(?:#(.*))?$/.exec(e)||[])[["url","scheme","slash","host","port","path","query","hash"].indexOf(t)]},t.insertScript=function(e){e=e||"js/info.js";var t=document.createElement("script");t.setAttribute("type","text/javascript"),t.src=chrome.extension.getURL(e),t.onload=function(){t.parentNode.removeChild(t)},document.head.appendChild(t)}},54:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.defaultMarkDownSourceUrl="https://github.com/TingGe/multi-environment-manager/raw/master/multi-env-list.md",t.authorLink="https://github.com/TingGe/multi-environment-manager",function(e){e.type="FROM_PAGE"}(t.requestEnum||(t.requestEnum={})),function(e){e.copy="copy"}(t.actionEnum||(t.actionEnum={})),function(e){e.debug="DEBUG_INFO"}(t.pageInfoEnum||(t.pageInfoEnum={}))},794:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(54),o=n(158);chrome.runtime.onMessage.addListener((function(e,t,n){try{e.action===r.actionEnum.copy&&o.insertScript("js/info.js")}catch(e){console.log("insertScript Fail:",e.message),chrome.runtime.sendMessage({type:r.requestEnum.type,text:""})}})),window.addEventListener("message",(function(e){e.data.type&&e.data.type==r.requestEnum.type&&chrome.runtime.sendMessage(e.data)}),!1)}});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,